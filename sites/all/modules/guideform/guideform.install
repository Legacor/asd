<?php

/**
 * @file
 * Install, update, and uninstall functions for the field_example module.
 */

/**
 * Implements hook_field_schema().
 *
 * Defines the database schema of the field, using the format used by the
 * Schema API.
 *
 * The data we will store here is just one 7-character element, even
 * though the widget presents the three portions separately.
 *
 * All implementations of hook_field_schema() must be in the module's
 * .install file.
 *
 * @see http://drupal.org/node/146939
 * @see schemaapi
 * @see hook_field_schema()
 * @ingroup field_example
 */
function guideform_field_schema($field) {
  $columns = array();
  switch ($field['type']) {
    case 'field_masteries':
      $columns = array(
        'maestrias' => array(
          'type' => 'varchar',
          'length' => 200,
          'not null' => FALSE,
        ),
      );
      break;
    case 'field_runes':
      $columns = array(
        'runas' => array(
          'type' => 'varchar',
          'length' => 200,
          'not null' => FALSE,
        ),
      );
      break;
    case 'field_skills':
      $columns = array(
        'habilidades' => array(
          'type' => 'varchar',
          'length' => 200,
          'not null' => FALSE,
        ),
      );
      break;
    case 'field_fullItems':
      $columns = array(
        'fullItems' => array(
          'type' => 'varchar',
          'length' => 100,
          'not null' => FALSE,
        ),
      );
      break;
    case 'field_startItems':
      $columns = array(
        'startItems' => array(
          'type' => 'varchar',
          'length' => 50,
          'not null' => FALSE,
        ),
      );
      break;
    case 'field_spells':
      $columns = array(
        'hechizos' => array(
          'type' => 'varchar',
          'length' => 50,
          'not null' => FALSE,
        ),
      );
      break;
  }
  return array(
    'columns' => $columns,
  );
}
